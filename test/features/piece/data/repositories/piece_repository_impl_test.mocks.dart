// Mocks generated by Mockito 5.0.3 from annotations
// in my_musical_repertoire/test/features/piece/data/repositories/piece_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:my_musical_repertoire/features/piece/data/datasources/piece_local_data_source.dart'
    as _i3;
import 'package:my_musical_repertoire/features/piece/domain/entities/piece_entity.dart'
    as _i2;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

class _FakePieceEntity extends _i1.Fake implements _i2.PieceEntity {}

/// A class which mocks [PieceLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockPieceLocalDataSource extends _i1.Mock
    implements _i3.PieceLocalDataSource {
  MockPieceLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.PieceEntity> add(_i2.PieceEntity? piece) =>
      (super.noSuchMethod(Invocation.method(#add, [piece]),
              returnValue: Future.value(_FakePieceEntity()))
          as _i4.Future<_i2.PieceEntity>);
  @override
  _i4.Future<_i2.PieceEntity> update(_i2.PieceEntity? piece) =>
      (super.noSuchMethod(Invocation.method(#update, [piece]),
              returnValue: Future.value(_FakePieceEntity()))
          as _i4.Future<_i2.PieceEntity>);
  @override
  _i4.Future<String> remove(String? id) =>
      (super.noSuchMethod(Invocation.method(#remove, [id]),
          returnValue: Future.value('')) as _i4.Future<String>);
  @override
  _i4.Future<List<_i2.PieceEntity>> getAll() =>
      (super.noSuchMethod(Invocation.method(#getAll, []),
              returnValue: Future.value(<_i2.PieceEntity>[]))
          as _i4.Future<List<_i2.PieceEntity>>);
}
